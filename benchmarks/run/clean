#! /usr/bin/env python
import getopt
import os
import subprocess
import sys

option = 0
try:
	opts, args = getopt.getopt(sys.argv[1:], "-h", ["reset", "purge"]) 
except getopt.GetoptError as err:
	print str(err)
	sys.exit(2)
for opt, arg in opts:
	print opt
	if opt in ("--reset"):
		option = 1
	if opt in ("--purge"):
		option = 2

cwd = os.getcwd()
work_dir = os.path.dirname(cwd)  + "/mibench"
print work_dir 
os.chdir(work_dir)

directories = []
for path in os.listdir(work_dir):
	if os.path.isdir(path):
		directories.append(path)
print directories
for directory in directories:
	os.chdir(directory)
	print directory
	if option == 0:
		command = "./configure-cache; make clean; ./configure-spm; make clean; smmmake --clean;"
	elif option == 1:
		command = "./configure-cache; make clean; ./configure-spm; make clean; smmmake --clean; rm -r m5out/cache; rm im_sram_config.txt"
	else:
		command = "./configure-cache; make clean; ./configure-spm; make clean; make clean; smmmake --clean; rm -r m5out; rm im_sram_config.txt function_size.txt code_size.txt stack_frame_size.txt stack_size.txt global_variable_size.txt configure-*"
	subprocess.call(command, shell=True)
	os.chdir(work_dir)
os.chdir(cwd)
